from sklearn.svm import SVC
import matplotlib.pyplot as plt
import matplotlib as mpl
from matplotlib.patches import Circle
import pandas as pd
from scipy.sparse import csr_matrix
import scipy.sparse as sp
import json
import  random
ids=[]
nodecount = 0
name_ind ={}
labels={}
with open ("/mnt/datasets/zeyu/HIN_DATA/graph.node") as f:
    for line in f.readlines():
        arr = line.strip().split(",")
        if(len(arr) < 3):
            continue
        if arr[1] == 'pefile':
            name_ind[arr[2]] = (int)(arr[0])
        nodecount+=1
file = pd.read_json('/mnt/datasets/zeyu/HIN_DATA/1_1.json')
for i in range(len(file)):
    labels[name_ind[file['md5'][i]]] = (int)(file['label'][i])
with open ("/mnt/datasets/zeyu/HIN_DATA/graph.node") as f:
    for line in f.readlines():
        arr = line.strip().split(",")
        if(len(arr) < 3):
            continue
        if arr[1] == 'pefile':
            if labels[(int)(arr[0])] == -1:
                continue
            ids.append((int)(arr[0]))
random.shuffle(ids)
length =len(ids)
train = ids[0:(int)(length*0.6)]
val = ids[(int)(length*0.6):(int)(length*0.8)]
test = ids[(int)(length*0.8):length]
split_info={}
"""
        ids_train = split_info['train_ids']
        ids_val = split_info['val_ids']
        ids_test = split_info['test_ids']
"""
split_info['train_ids'] = train
split_info['val_ids'] = val
split_info['test_ids'] = test
f_split = open("/mnt/datasets/zeyu/HIN_DATA/split_info.json",'w')
json.dump(split_info,f_split)
f_split.close()
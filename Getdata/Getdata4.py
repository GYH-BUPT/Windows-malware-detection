import numpy as np
from sklearn.svm import SVC
import matplotlib.pyplot as plt
import matplotlib as mpl
from matplotlib.patches import Circle
import pandas as pd
from scipy.sparse import csr_matrix
import scipy.sparse as sp
import json
name_ind ={}
nodecount = 0
with open ("/mnt/datasets/zeyu/HIN_DATA/graph.node") as f:
    for line in f.readlines():
        arr = line.strip().split(",")
        if(len(arr) < 3):
            continue
        if arr[1] == 'pefile':
            name_ind[arr[2]] = (int)(arr[0])
        nodecount+=1
print(name_ind)

labels =[0] * nodecount


f = pd.read_json('/mnt/datasets/zeyu/HIN_DATA/1_1.json')

ind=["urls","registry"]
row = []
col =[]
value =[]
for i in  range(len(f['md5'])):
    if i not in f['md5']:
        continue
    labels[name_ind[f['md5'][i]]] = (int)(f['label'][i])
    if 0!=f['strings'][i]['urls']:
        row.append(name_ind[f['md5'][i]])
        col.append(0)
        value.append(f['strings'][i]['urls'])
    if 0!=f['strings'][i]['registry']:
        row.append(name_ind[f['md5'][i]])
        col.append(1)
        value.append(f['strings'][i]['registry'])
    if 0!=f["general"][i]["exports"]:
        row.append(name_ind[f['md5'][i]])
        col.append(2)
        value.append(f["general"][i]["exports"])
    if 0!=f["general"][i]['imports']:
        row.append(name_ind[f['md5'][i]])
        col.append(3)
        value.append(f["general"][i]['imports'])
    if 0!=f["general"][i]['size']:
        row.append(name_ind[f['md5'][i]])
        col.append(4)
        value.append(f["general"][i]['size'])
matrix = csr_matrix((value,(row,col)))
sp.save_npz("/mnt/datasets/zeyu/HIN_DATA/feat.npz",matrix)
print(labels)
filename = "/mnt/datasets/zeyu/HIN_DATA/label.json"
with open (filename,'w') as f_label:
    json.dump(labels, f_label)


f = pd.read_json('/mnt/datasets/zeyu/HIN_DATA/1_1.json')
Alists = []
i = 0
Alist = {}
for string in f["strings"]:
    num_url = string["urls"]
    num_registry = string["registry"]

    Alist[i] = [num_url, num_registry]
    Alists.append(Alist[i])
Alist5 = Alists

Alists = []
i = 0
Alist = {}
for gen in f["general"]:
    num_export = gen["exports"]
    num_api = gen["imports"]
    size = gen["size"]
    Alist[i] = [size, num_api, num_export]
    Alists.append(Alist[i])
Alist6 = Alists

Alists = []
i = 0
while i < len(Alist6):
    feat = Alist5[i]+ Alist6[i]
    Alists.append(feat)
    i +=1
feats = Alists
row = []
col = []
value = []
for i in range(len(feats)):
    now_feat = feats[i]
    for j in range(len(now_feat)):
        now_value=feats[i][j]
        if(now_value!=0):
            row.append(i)
            col.append(j)
            value.append(now_value)
